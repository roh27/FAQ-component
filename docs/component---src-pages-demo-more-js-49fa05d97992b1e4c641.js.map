{"version":3,"sources":["webpack:///./src/components/faqToggleOption.js","webpack:///./src/pages/demo-more.js"],"names":["data","title","rows","content","App","useState","setRowsOption","row","setRow","id","className","htmlFor","type","value","onChange","e","target","min","max","disabled","onClick","expand","close","getRowOptions","IndexPage","useEffect","Prism","highlightAll","styles","titleTextColor","rowTitleColor","arrowColor","config","arrowIcon","rowContentColor","bgColor","rowTitleTextSize","rowContentTextSize","rowContentPaddingTop","rowContentPaddingBottom","rowContentPaddingLeft","rowContentPaddingRight","transitionDuration","timingFunc","tabFocus"],"mappings":"4MAGMA,G,sEAAO,CACXC,MAAO,qBACPC,KAAM,CACJ,CACED,MACE,gVACFE,QAAQ,i4EAoBV,CACEF,MAAO,6CACPE,QACE,iHAEJ,CACEF,MAAO,4BACPE,QAAQ,qGAEV,CACEF,MAAO,8BACPE,QAAS,aAKA,SAASC,IAAO,IAAD,EACEC,mBAAS,MAAhCH,EADqB,KACfI,EADe,OAEND,mBAAS,GAAxBE,EAFqB,KAEhBC,EAFgB,KAY5B,OACE,yBAAKC,GAAG,mBACN,yBAAKC,UAAU,cACb,2BAAOC,QAAQ,UAAf,qBACA,2BACEC,KAAK,SACLH,GAAG,SACHI,MAAON,EACPO,SAAU,SAAAC,GAAC,OAAIP,EAAOO,EAAEC,OAAOH,QAC/BI,IAAI,IACJC,IAAI,IACJC,UAAWjB,IAEb,4BAAQU,KAAK,SAASQ,QArBb,WACblB,GAAQA,EAAKK,GAAKc,WAoBd,cAIA,4BAAQT,KAAK,SAASQ,QArBd,WACZlB,GAAQA,EAAKK,GAAKe,UAoBd,cAKF,6BACE,kBAAC,IAAD,CAAKtB,KAAMA,EAAMuB,cAAejB,MCtExC,IAAMN,EAAO,CACXC,MAAO,qBACPC,KAAM,CACJ,CACED,MACE,iKACFE,QAAQ,8ZAKV,CACEF,MAAO,6CACPE,QACE,8NAEJ,CACEF,MAAO,4BACPE,QAAQ,qGAEV,CACEF,MAAO,8BACPE,QAAS,YA+MAqB,UA1MG,WAMhB,OALAC,qBAAU,WAERC,IAAMC,iBACL,IAGD,kBAAC,WAAD,KAcE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK1B,MAAM,eACX,kBAAC,IAAD,MACA,0CACA,6BAASS,UAAU,QACjB,wDACA,6BACE,0BAAMA,UAAU,gBAAhB,kIAUF,kBAAC,IAAD,CACEV,KAAMA,EACN4B,OAAQ,CACNC,eAAgB,QAChBC,cAAe,oBAInB,qEACA,6BACE,0BAAMpB,UAAU,gBAAhB,mLAaF,kBAAC,IAAD,CACEV,KAAMA,EACN4B,OAAQ,CACNC,eAAgB,QAChBC,cAAe,iBACfC,WAAY,OAEdC,OAAQ,CACNC,UAAW,OAIf,qEACA,6BACE,0BAAMvB,UAAU,gBAAhB,oKAWF,kBAAC,IAAD,CACEV,KAAMA,EACN4B,OAAQ,CACNC,eAAgB,QAChBC,cAAe,iBACfI,gBAAiB,UAIrB,8DACA,6BACE,0BAAMxB,UAAU,gBAAhB,udAmBF,kBAAC,IAAD,CACEV,KAAMA,EACN4B,OAAQ,CACNO,QAAS,QACTN,eAAgB,UAChBC,cAAe,UACfM,iBAAkB,QAClBF,gBAAiB,UACjBG,mBAAoB,OACpBC,qBAAsB,OACtBC,wBAAyB,OACzBC,sBAAuB,OACvBC,uBAAwB,QACxBV,WAAY,WAIhB,6EACA,6BACE,0BAAMrB,UAAU,gBAAhB,oKAUF,kBAAC,IAAD,CACEV,KAAMA,EACN4B,OAAQ,CACNc,mBAAoB,OACpBC,WAAY,UAEdX,OAAQ,CACNY,UAAU,KAId,kEACA,6BACE,0BAAMlC,UAAU,gBAAhB,y8BAoCF,kBAAC,EAAD,QAGJ,kBAAC,IAAD","file":"component---src-pages-demo-more-js-49fa05d97992b1e4c641.js","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport Faq from \"react-faq-component\"\r\n\r\nconst data = {\r\n  title: \"FAQ (How it works)\",\r\n  rows: [\r\n    {\r\n      title:\r\n        \"Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat\",\r\n      content: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat,\r\n            ultricies metus at, consequat velit. Curabitur est nibh, varius in tellus nec, mattis pulvinar metus.\r\n            In maximus cursus lorem, nec laoreet velit eleifend vel. Ut aliquet mauris tortor, sed egestas libero interdum vitae.\r\n            Fusce sed commodo purus, at tempus turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat,\r\n            ultricies metus at, consequat velit. Curabitur est nibh, varius in tellus nec, mattis pulvinar metus.\r\n            In maximus cursus lorem, nec laoreet velit eleifend vel. Ut aliquet mauris tortor, sed egestas libero interdum vitae.\r\n            Fusce sed commodo purus, at tempus turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat,\r\n            ultricies metus at, consequat velit. Curabitur est nibh, varius in tellus nec, mattis pulvinar metus.\r\n            In maximus cursus lorem, nec laoreet velit eleifend vel. Ut aliquet mauris tortor, sed egestas libero interdum vitae.\r\n            Fusce sed commodo purus, at tempus turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat,\r\n            ultricies metus at, consequat velit. Curabitur est nibh, varius in tellus nec, mattis pulvinar metus.\r\n            In maximus cursus lorem, nec laoreet velit eleifend vel. Ut aliquet mauris tortor, sed egestas libero interdum vitae.\r\n            Fusce sed commodo purus, at tempus turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat,\r\n            ultricies metus at, consequat velit. Curabitur est nibh, varius in tellus nec, mattis pulvinar metus.\r\n            In maximus cursus lorem, nec laoreet velit eleifend vel. Ut aliquet mauris tortor, sed egestas libero interdum vitae.\r\n            Fusce sed commodo purus, at tempus turpis. Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat,\r\n            ultricies metus at, consequat velit. Curabitur est nibh, varius in tellus nec, mattis pulvinar metus.\r\n            In maximus cursus lorem, nec laoreet velit eleifend vel. Ut aliquet mauris tortor, sed egestas libero interdum vitae.\r\n            Fusce sed commodo purus, at tempus turpis.`,\r\n    },\r\n    {\r\n      title: \"Nunc maximus, magna at ultricies elementum\",\r\n      content:\r\n        \"Nunc maximus, magna at ultricies elementum, risus turpis vulputate quam, vitae convallis ex tortor sed dolor.\",\r\n    },\r\n    {\r\n      title: \"Can I use html as content\",\r\n      content: `Yes, here is an example of a <a href=\"https://binodswain.github.io/react-faq-component/\">link</a>`,\r\n    },\r\n    {\r\n      title: \"What is the package version\",\r\n      content: \"v1.0.0\",\r\n    },\r\n  ],\r\n}\r\n\r\nexport default function App() {\r\n  const [rows, setRowsOption] = useState(null)\r\n  const [row, setRow] = useState(0)\r\n\r\n  const expand = () => {\r\n    rows && rows[row].expand()\r\n  }\r\n\r\n  const close = () => {\r\n    rows && rows[row].close()\r\n  }\r\n\r\n  return (\r\n    <div id=\"external-toggle\">\r\n      <div className=\"row-option\">\r\n        <label htmlFor=\"rownum\">Enter row number:</label>\r\n        <input\r\n          type=\"number\"\r\n          id=\"rownum\"\r\n          value={row}\r\n          onChange={e => setRow(e.target.value)}\r\n          min=\"0\"\r\n          max=\"3\"\r\n          disabled={!rows}\r\n        />\r\n        <button type=\"button\" onClick={expand}>\r\n          Exapnd row\r\n        </button>\r\n\r\n        <button type=\"button\" onClick={close}>\r\n          Close row\r\n        </button>\r\n      </div>\r\n\r\n      <div>\r\n        <Faq data={data} getRowOptions={setRowsOption} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Gitfork from \"../components/githubFork\"\r\nimport Footer from \"../components/footer\"\r\nimport Faq from \"react-faq-component\"\r\nimport Prism from \"prismjs\"\r\nimport { Fragment } from \"react\"\r\nimport FaqExternal from \"../components/faqToggleOption\"\r\n\r\nconst data = {\r\n  title: \"FAQ (How it works)\",\r\n  rows: [\r\n    {\r\n      title:\r\n        \"Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat Lorem ipsum dolor sit amet, \",\r\n      content: `Lorem ipsum dolor sit amet, consectetur adipiscing elit. In sed tempor sem. Aenean vel turpis feugiat,\r\n              ultricies metus at, consequat velit. Curabitur est nibh, varius in tellus nec, mattis pulvinar metus.\r\n              In maximus cursus lorem, nec laoreet velit eleifend vel. Ut aliquet mauris tortor, sed egestas libero interdum vitae.\r\n              Fusce sed commodo purus, at tempus turpis.`,\r\n    },\r\n    {\r\n      title: \"Nunc maximus, magna at ultricies elementum\",\r\n      content:\r\n        \"Nunc maximus, magna at ultricies elementum, risus turpis vulputate quam, vitae convallis ex tortor sed dolor.Nunc maximus, magna at ultricies elementum, risus turpis vulputate quam, vitae convallis ex tortor sed dolor.\",\r\n    },\r\n    {\r\n      title: \"Can I use html as content\",\r\n      content: `Yes, here is an example of a <a href=\"https://binodswain.github.io/react-faq-component/\">link</a>`,\r\n    },\r\n    {\r\n      title: \"What is the package version\",\r\n      content: \"v1.0.5\",\r\n    },\r\n  ],\r\n}\r\n\r\nconst IndexPage = () => {\r\n  useEffect(() => {\r\n    // call the highlightAll() function to style our code blocks\r\n    Prism.highlightAll()\r\n  }, [])\r\n\r\n  return (\r\n    <Fragment>\r\n      {/* <header className=\"banner-sec\">\r\n        <div\r\n          style={{\r\n            margin: `0 auto`,\r\n            maxWidth: 960,\r\n            padding: `1.0875rem`,\r\n            marginBottom: `1em`,\r\n          }}\r\n        >\r\n          <h1 style={{ margin: 0 }}>react-faq-component</h1>\r\n        </div>\r\n      </header> */}\r\n\r\n      <Layout>\r\n        <SEO title=\"More demos\" />\r\n        <Gitfork />\r\n        <h1>More Demos</h1>\r\n        <section className=\"demo\">\r\n          <h2>View 1 (with animation):</h2>\r\n          <pre>\r\n            <code className=\"language-jsx\">\r\n              {`<Faq \r\n    data={data}\r\n    styles={{\r\n        titleTextColor: \"green\",\r\n        rowTitleColor: \"mediumseagreen\"\r\n    }} \r\n/>`}\r\n            </code>\r\n          </pre>\r\n          <Faq\r\n            data={data}\r\n            styles={{\r\n              titleTextColor: \"green\",\r\n              rowTitleColor: \"mediumseagreen\",\r\n            }}\r\n          />\r\n\r\n          <h2>View 2 (with animation, custom icon):</h2>\r\n          <pre>\r\n            <code className=\"language-jsx\">\r\n              {`<Faq \r\n    data={data} \r\n    styles={{\r\n        titleTextColor: \"green\",\r\n        rowTitleColor: \"mediumseagreen\"\r\n    }} \r\n    config={{\r\n        arrowIcon: \"V\",\r\n    }}\r\n/>`}\r\n            </code>\r\n          </pre>\r\n          <Faq\r\n            data={data}\r\n            styles={{\r\n              titleTextColor: \"green\",\r\n              rowTitleColor: \"mediumseagreen\",\r\n              arrowColor: \"red\",\r\n            }}\r\n            config={{\r\n              arrowIcon: \"V\",\r\n            }}\r\n          />\r\n\r\n          <h2>View 3 (with different title colors):</h2>\r\n          <pre>\r\n            <code className=\"language-jsx\">\r\n              {`<Faq \r\n    data={data} \r\n    styles={{\r\n        titleTextColor: \"green\",\r\n        rowTitleColor: \"mediumseagreen\",\r\n        rowContentColor: \"grey\"\r\n    }}\r\n/>`}\r\n            </code>\r\n          </pre>\r\n          <Faq\r\n            data={data}\r\n            styles={{\r\n              titleTextColor: \"green\",\r\n              rowTitleColor: \"mediumseagreen\",\r\n              rowContentColor: \"grey\",\r\n            }}\r\n          />\r\n\r\n          <h2>View 4 (with content padding):</h2>\r\n          <pre>\r\n            <code className=\"language-jsx\">\r\n              {`<Faq \r\n    data={data} \r\n    styles={{\r\n        bgColor: \"white\",\r\n        titleTextColor: \"#48482a\",\r\n        rowTitleColor: \"#78789a\",\r\n        rowTitleTextSize: 'large',\r\n        rowContentColor: \"#48484a\",\r\n        rowContentTextSize: '16px',\r\n        rowContentPaddingTop: '10px',\r\n        rowContentPaddingBottom: '10px',\r\n        rowContentPaddingLeft: '50px',\r\n        rowContentPaddingRight: '150px',\r\n        arrowColor: \"black\",\r\n        }} \r\n/>`}\r\n            </code>\r\n          </pre>\r\n          <Faq\r\n            data={data}\r\n            styles={{\r\n              bgColor: \"white\",\r\n              titleTextColor: \"#48482a\",\r\n              rowTitleColor: \"#78789a\",\r\n              rowTitleTextSize: \"large\",\r\n              rowContentColor: \"#48484a\",\r\n              rowContentTextSize: \"16px\",\r\n              rowContentPaddingTop: \"10px\",\r\n              rowContentPaddingBottom: \"10px\",\r\n              rowContentPaddingLeft: \"50px\",\r\n              rowContentPaddingRight: \"150px\",\r\n              arrowColor: \"black\",\r\n            }}\r\n          />\r\n\r\n          <h2>View 5 (with custom transition and tabFocus):</h2>\r\n          <pre>\r\n            <code className=\"language-jsx\">{`<Faq data={data} \r\n    styles={{\r\n        transitionDuration: \"2.5s\",\r\n        timingFunc: \"linear\"\r\n    }}\r\n    config={{\r\n        tabFocus: true,\r\n    }}\r\n/>`}</code>\r\n          </pre>\r\n          <Faq\r\n            data={data}\r\n            styles={{\r\n              transitionDuration: \"2.5s\",\r\n              timingFunc: \"linear\",\r\n            }}\r\n            config={{\r\n              tabFocus: true,\r\n            }}\r\n          />\r\n\r\n          <h2>View 6 (with external row toggle):</h2>\r\n          <pre>\r\n            <code className=\"language-jsx\">{`export default function App() {\r\n    const [rows, setRowsOption] = useState(null)\r\n    const [row, setRow] = useState(0)\r\n  \r\n    const expand = () => {\r\n        rows && rows[row].expand()\r\n    }\r\n  \r\n    const close = () => {\r\n        rows && rows[row].close()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Faq data={data} getRowOptions={setRowsOption} />\r\n\r\n            <div className=\"row-option\">\r\n                <label htmlFor=\"rownum\">Enter row number:</label>\r\n                <input type=\"number\" id=\"rownum\"\r\n                    value={row} onChange={e => setRow(e.target.value)}\r\n                    min=\"0\" max=\"3\" disabled={!rows}\r\n                />\r\n                <button type=\"button\" onClick={expand}>\r\n                    Exapnd row\r\n                </button>\r\n\r\n                <button type=\"button\" onClick={close}>\r\n                    Close row\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n            `}</code>\r\n          </pre>\r\n          <FaqExternal />\r\n        </section>\r\n      </Layout>\r\n      <Footer />\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default IndexPage\r\n"],"sourceRoot":""}